apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka
      app.kubernetes.io/component: kafka
      app.kubernetes.io/part-of: ftgo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafka
        app.kubernetes.io/component: kafka
        app.kubernetes.io/part-of: ftgo
    spec:
      containers:
        - name: kafka
          image: eventuateio/eventuate-kafka:0.17.0.RELEASE
          resources:
            requests:
              memory: 512Mi
              cpu: 0.5
          ports:
            - containerPort: 9092
              name: lx
            - containerPort: 29092
              name: lc
          env:
            - name: KAFKA_LISTENERS
              value: "LC://0.0.0.0:29092,LX://0.0.0.0:9092"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "LC://kafka.default.svc.cluster.local:29092,LX://localhost:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "LC:PLAINTEXT,LX:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "LC"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper.default.svc.cluster.local:2181"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_HEAP_OPTS
              value: "-Xmx192m"
          volumeMounts:
            - name: logs
              mountPath: /tmp/kafka-logs
          # livenessProbe:
          #   exec:
          #     command: ["sh", "-c", "bin/kafka-broker-api-versions.sh --bootstrap-server=localhost:9092"]
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 10
  volumeClaimTemplates:
    - metadata:
        name: logs
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
